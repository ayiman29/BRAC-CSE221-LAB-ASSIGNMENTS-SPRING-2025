You are given an N×N chessboard and the initial position (X1,Y1) of a Knight piece.
You need to find the minimum number of moves the Knight needs to reach the target position (X2,Y2). 
If it is not possible to reach the target, print −1

.
Moves of a Knight in Chess

The Knight can move one step in any of the 8 possible directions as shown at the image "knight.png".


Input
An integer N (1 ≤ N ≤ 1000) - the size of the chessboard.
An integer X1, Y1 (1 ≤ X1, Y1 ≤ N) - the initial position of the Knight.
An integer X2, Y2 (1 ≤ X2, Y2 ≤ N) - the target position of the Knight.


Output
An integer - the minimum number of moves the Knight needs to reach the target position (X2,Y2).
If it is not possible to reach the target, print −1.

Example-1:
N = 4
X1 = 1
Y1 = 1
X2 = 3
Y2 = 4
solve(N, X1, Y1, X2, Y2) returns 3

Example-2:
N = 6
X1 = 1
Y1 = 4
X2 = 2
Y2 = 3
solve(N, X1, Y1, X2, Y2) returns 2

Example-3:
N = 2
X1 = 1
Y1 = 2
X2 = 1
Y2 = 2
solve(N, X1, Y1, X2, Y2) returns 0

Example-4:
N = 3
X1 = 2
Y1 = 2
X2 = 1
Y2 = 3
solve(N, X1, Y1, X2, Y2) returns -1

Time limit: 1s per batch.

Scoring:
Batch   Score   Tests   max(N)
1       0.05     1       4           (Example - 1)
2       0.05     1       6           (Example - 2)
3       0.05     1       2           (Example - 3)
4       0.05     1       3           (Example - 4)
5       0.08     40      20           
6       0.08     40      20
7       0.08     40      50           
8       0.08     40      50
9       0.08     20      100           
10      0.08     20      100
11      0.08     10      200           
12      0.08     10      200
13      0.08     5       1000           
14      0.08     5       1000           
-------------------------------
14      1       Total
