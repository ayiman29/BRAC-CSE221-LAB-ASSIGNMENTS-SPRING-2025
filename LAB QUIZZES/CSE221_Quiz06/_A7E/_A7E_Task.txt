You are given a directed weighted graph with N nodes and M edges. The nodes
are numbered from 1 to N. The graph contains no self-loops or multiple edges.

Your task is to find the shortest distance from node 1 to node N, with an
additional constraint: the path cannot contain two consecutive edges with
weights having the same parity (i.e., both even or both odd). 
If no such path exists, print −1.

Input

You will be given the following inputs:
- N: the number of nodes in the graph (1 ≤ N ≤ 200,000).
- M: the number of edges in the graph (1 ≤ M ≤ 300,000).
- Us: the starting endpoint of the edge (1 ≤ us ≤ N).
- Vs: the ending endpoint of the edge (1 ≤ vs ≤ N).
- Ws: the weight of the edge (1 ≤ ws ≤ 10^6).

Output

Return one integers the minimum time it takes to reach node N from node 1,
or -1 if it is not possible to reach node N from node 1.


Example-1:
N = 4
M = 3
Us = [1, 3, 2]
Vs = [4, 4, 3]
Ws = [3, 4, 5]
solve(N, M, Us, Vs, Ws) returns 3

Example-2:
N = 6
M = 5
Us = [1, 4, 1, 6, 4]
Vs = [2, 1, 6, 2, 6]
Ws = [3, 3, 4, 3, 4]
solve(N, M, Us, Vs, Ws) returns 4

Example-3:
N = 2
M = 1
Us = [2]
Vs = [1]
Ws = [7]
solve(N, M, Us, Vs, Ws) returns -1

Example-4:
N = 5
M = 7
Us = [1, 1, 4, 5, 2, 3, 2]
Vs = [4, 5, 3, 4, 4, 5, 3]
Ws = [3, 8, 2, 6, 6, 4, 3]
solve(N, M, Us, Vs, Ws) returns 8

Time limit: 2s per batch.

Scoring:
Batch   Score   Tests   max(N)
1       0.05     1       4           (Example - 1)
2       0.05     1       6           (Example - 2)
3       0.05     1       2           (Example - 3)
4       0.05     1       5           (Example - 4)
5       0.08     40      20           
6       0.08     40      20
7       0.08     40      200           
8       0.08     40      200
9       0.08     20      2000           
10      0.08     20      2000
11      0.08     10      20000           
12      0.08     10      20000
13      0.08     5       100000           
14      0.08     5       100000           
-------------------------------
14      1       Total